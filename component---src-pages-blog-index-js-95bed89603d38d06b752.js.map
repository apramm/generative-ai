{"version":3,"file":"component---src-pages-blog-index-js-95bed89603d38d06b752.js","mappings":"2LAGWA,EAAc,sCACdC,EAAc,sCC+CzB,MAxCeC,IAA8B,IAA7B,UAAEC,EAAS,SAAEC,GAAUF,EACrC,MAAMG,GAAOC,EAAAA,EAAAA,gBAAe,cAS5B,OACEC,EAAAA,cAAA,OAAKC,UDrBc,mCCsBjBD,EAAAA,cAAA,UAAQC,UDjBS,oCCiBcH,EAAKI,KAAKC,aAAaC,OAChDJ,EAAAA,cAAA,WACJA,EAAAA,cAAA,MAAIC,UDpBU,mCCqBZD,EAAAA,cAAA,MAAIC,UAAWR,GACbO,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAG,IAAIL,UAAWP,GAAa,SAIvCM,EAAAA,cAAA,MAAIC,UAAWR,GACbO,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAG,UAAUL,UAAWP,GAAa,UAI7CM,EAAAA,cAAA,MAAIC,UAAWR,GACbO,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAG,QAAQL,UAAWP,GAAa,WAM/CM,EAAAA,cAAA,YACEA,EAAAA,cAAA,MAAIC,UD1CS,iCC0CYL,GACxBC,GAEC,C,+CC5BV,IAhBYF,IAAgB,IAAf,MAAES,GAAOT,EACpB,MAAMG,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACEC,EAAAA,cAAA,aAAQI,EAAM,MAAIN,EAAKI,KAAKC,aAAaC,MAAc,C,2GCV3D,MAkCaG,EAAOA,IAAMP,EAAAA,cAACQ,EAAAA,EAAG,CAACJ,MAAM,kBAErC,UApCiBT,IAAe,IAAd,KAAEG,GAAMH,EACxB,OACEK,EAAAA,cAACS,EAAAA,EAAM,CAACb,UAAU,iBAEdE,EAAKY,OAAOC,MAAMC,KAAIC,GACpBb,EAAAA,cAAA,WAASc,IAAKD,EAAKE,IACjBf,EAAAA,cAAA,UACEA,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAE,SAAWO,EAAKG,YAAYC,MACjCJ,EAAKG,YAAYZ,QAGtBJ,EAAAA,cAAA,SAAG,WAASa,EAAKG,YAAYE,SAI5B,C","sources":["webpack://gatsby-starter-default/./src/components/layout.module.css","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/blog/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var heading = \"layout-module--heading--f158c\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinkText = \"layout-module--nav-link-text--69cda\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var siteTitle = \"layout-module--site-title--e4dea\";","import * as React from 'react'\nimport { Link, StaticQuery, useStaticQuery, graphql } from 'gatsby'\nimport {\n  container,\n  siteTitle,\n  heading,\n  navLinks,\n  navLinkItem,\n  navLinkText\n} from './layout.module.css'\n\nconst Layout = ({ pageTitle, children }) => {\n  const data = useStaticQuery(graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`)\n  return (\n    <div className={container}>\n      <header className={siteTitle}>{data.site.siteMetadata.title}</header>\n            <nav>\n        <ul className={navLinks}>\n          <li className={navLinkItem}>\n            <Link to=\"/\" className={navLinkText}>\n              Home\n            </Link>\n          </li>\n          <li className={navLinkItem}>\n            <Link to=\"/page-2\" className={navLinkText}>\n              About\n            </Link>\n          </li>\n          <li className={navLinkItem}>\n            <Link to=\"/blog\" className={navLinkText}>\n              Blog\n            </Link>\n          </li>\n        </ul>\n      </nav>\n      <main>\n        <h1 className={heading}>{pageTitle}</h1>\n        {children}\n      </main>\n    </div>\n  )\n}\n\nexport default Layout","import * as React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst Seo = ({ title }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <title>{title} | {data.site.siteMetadata.title}</title>\n  )\n}\n\nexport default Seo","import * as React from 'react'\nimport { StaticQuery,Link, graphql } from 'gatsby'\nimport Layout from '../../components/layout'\nimport Seo from '../../components/seo'\n\nconst BlogPage = ({ data }) => {\n  return (\n    <Layout pageTitle=\"My Blog Posts\">\n      {\n        data.allMdx.nodes.map(node => (\n          <article key={node.id}>\n            <h2>\n              <Link to={`/blog/${node.frontmatter.slug}`}>\n                {node.frontmatter.title}\n              </Link>\n            </h2>\n            <p>Posted: {node.frontmatter.date}</p>\n          </article>\n        ))\n      }\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMdx(sort: { frontmatter: { date: DESC }}) {\n      nodes {\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n          slug\n        }\n        id\n      }\n    }\n  }\n`\n\nexport const Head = () => <Seo title=\"My Blog Posts\" />\n\nexport default BlogPage"],"names":["navLinkItem","navLinkText","_ref","pageTitle","children","data","useStaticQuery","React","className","site","siteMetadata","title","Link","to","Head","Seo","Layout","allMdx","nodes","map","node","key","id","frontmatter","slug","date"],"sourceRoot":""}