{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-blog-another-post-mdx-ffd3876f29fcd20c3ad2.js","mappings":"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","sources":["webpack://gatsby-starter-default/./blog/another-post.mdx","webpack://gatsby-starter-default/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://gatsby-starter-default/./src/components/layout.module.css","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Lorem\"), \"\\n\", React.createElement(_components.p, null, \"Hi to my blog! In this post, we'll explore some exciting topics related to technology and programming. Let's dive right in.\"), \"\\n\", React.createElement(_components.h2, null, \"Section 1: Introduction\"), \"\\n\", React.createElement(_components.p, null, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"), \"\\n\", React.createElement(_components.h2, null, \"Section 2: Gatsby and MDX\"), \"\\n\", React.createElement(_components.p, null, \"If you're reading this, you've probably heard about \", React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/\"\n  }, \"Gatsby\"), \" and \", React.createElement(_components.a, {\n    href: \"https://mdxjs.com/\"\n  }, \"MDX\"), \". Gatsby is a fantastic framework for building fast websites and applications, and MDX allows you to seamlessly integrate JSX (React components) into your Markdown files.\"), \"\\n\", React.createElement(_components.p, null, \"Here's an example of an inline code block:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\"\n  }, \"const greet = () => {\\n  return <div>Hello, world!</div>;\\n};\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/apramahuja/Desktop/generative-ai/gatsby-starter-default/blog/another-post.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nconst BlogPost = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(\"p\", null, data.mdx.frontmatter.date), children);\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM D, YYYY\")\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var heading = \"layout-module--heading--f158c\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinkText = \"layout-module--nav-link-text--69cda\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var siteTitle = \"layout-module--site-title--e4dea\";","import * as React from 'react'\nimport { Link, StaticQuery, useStaticQuery, graphql } from 'gatsby'\nimport {\n  container,\n  siteTitle,\n  heading,\n  navLinks,\n  navLinkItem,\n  navLinkText\n} from './layout.module.css'\n\nconst Layout = ({ pageTitle, children }) => {\n  const data = useStaticQuery(graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`)\n  return (\n    <div className={container}>\n      <header className={siteTitle}>{data.site.siteMetadata.title}</header>\n            <nav>\n        <ul className={navLinks}>\n          <li className={navLinkItem}>\n            <Link to=\"/\" className={navLinkText}>\n              Home\n            </Link>\n          </li>\n          <li className={navLinkItem}>\n            <Link to=\"/page-2\" className={navLinkText}>\n              About\n            </Link>\n          </li>\n          <li className={navLinkItem}>\n            <Link to=\"/blog\" className={navLinkText}>\n              Blog\n            </Link>\n          </li>\n        </ul>\n      </nav>\n      <main>\n        <h1 className={heading}>{pageTitle}</h1>\n        {children}\n      </main>\n    </div>\n  )\n}\n\nexport default Layout","import * as React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst Seo = ({ title }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <title>{title} | {data.site.siteMetadata.title}</title>\n  )\n}\n\nexport default Seo","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","h2","a","pre","code","_provideComponents","components","React","href","className","wrapper","MDXLayout","BlogPost","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","date","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","navLinkItem","navLinkText","useStaticQuery","site","siteMetadata","Link","to","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}